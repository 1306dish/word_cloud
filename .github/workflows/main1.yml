# This is a basic workflow to help you get started with Actions

name: Linux Wheel

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_wheel_x86_64:
    name: "Build and Deploy (x86_64 ${{ matrix.pyver }})"
    strategy:
      matrix:
        pyver: ['3.6', '3.7', '3.8', '3.9']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setting up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.pyver }}
      - name: Install dependencies
        run: |
          python --version
          python -m pip install --disable-pip-version-check --upgrade pip
          pip install -U -r requirements.txt -r requirements-dev.txt
      - name: Build manylinux wheels x86_64
        run: |
          python -c "import numpy; print('numpy %s' % numpy.__version__)"
          # Source distribution
          python setup.py sdist
          # Built distribution (wheel)
          python setup.py bdist_wheel
          # Install locally to support tests
          pip install -e .
          pip install auditwheel
          for whl in dist/*$(python -c "import wheel.pep425tags as w; print(w.get_platform())").whl; do
              auditwheel repair $whl -w ./dist/ --plat linux_x86_64
              rm $whl
          done
      - name: Test
        run: pytest      
      - name: Upload dist
        uses: actions/upload-artifact@v2
        with:
          path: dist/*.whl
  build_wheel_aarch64:
    name: "Build and Deploy (aarch64 ${{ matrix.pyver }})"
    strategy:
      matrix:
        pyver: [cp36-cp36m, cp37-cp37m, cp38-cp38, cp39-cp39]
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      py: /opt/python/${{ matrix.pyver }}/bin/python
      img: quay.io/pypa/manylinux2014_aarch64
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - run: |
         docker run --rm --privileged hypriot/qemu-register
    #- name: Setting up Python ${{ matrix.pyver }}
     # uses: actions/setup-python@v2
      #with:
       # python-version: ${{ matrix.pyver }}
        #architecture: linux_aarch64
    - uses: docker://quay.io/pypa/manylinux2014_aarch64
      with:
        args: |
            bash -c "${{ env.py }} -m pip install virtualenv && ${{ env.py }} -m venv .env && \
            source .env/bin/activate && \
            python --version && \
            pip install --upgrade setuptools && \
            python -m pip install --disable-pip-version-check --upgrade pip && \
            pip install -U -r requirements.txt -r requirements-dev.txt && \
            python -c \"import numpy; print('numpy %s' % numpy.__version__)\" && \
            # Built distribution (wheel)
            python setup.py bdist_wheel && \
            pip install -e . && \
            pip install auditwheel && \
            for whl in dist/*$(python -c \"import wheel.pep425tags as w; print(w.get_platform())\").whl; do
                auditwheel repair $whl -w ./dist/ --plat linux_aarch64;
                rm $whl;
            done && \
            pytest && \
            deactivate"
    - name: Upload dist
      uses: actions/upload-artifact@v2
      with:
        path: dist/*.whl
